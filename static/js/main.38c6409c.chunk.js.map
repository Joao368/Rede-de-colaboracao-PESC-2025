{"version":3,"sources":["serviceWorker.js","data/colors.js","components/GraphView/index.js","components/NodeInformation/index.js","components/AboutProject/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","categoricalColors","d3","colors","memo","setNode","svgref","useRef","networkLinkStatus","networkLinks","colaborationNetwork","publications","reduce","result","publication","authors","length","flatMap","authorA","idx","slice","map","authorB","localeCompare","forEach","nodeA","nodeB","linkId","link","find","id","push","source","target","networkNodes","nodes","filter","node","some","isConnected","useEffect","svg","current","width","clientWidth","height","clientHeight","simulation","force","d","strength","degree","append","attr","selectAll","data","join","Math","sqrt","field","call","on","event","dNode","active","alphaTarget","restart","fx","x","fy","y","drag","_event","transition","duration","style","o","l","_dNode","text","colorLegend","Object","keys","enter","i","max","min","addEventListener","alpha","className","ref","NodeInformation","AboutProject","useState","openned","setOpenned","onClick","size","href","rel","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38c6409c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as d3 from 'd3';\n\nconst categoricalColors = d3.scaleOrdinal(d3.schemeCategory10);\n\nconst colors = {\n  'Redes de Computadores': categoricalColors(1),\n  'Otimização': categoricalColors(2),\n  'Engenharia de Dados e Conhecimento': categoricalColors(3),\n  'Engenharia de Software': categoricalColors(4),\n  'Computação Gráfica': categoricalColors(5),\n  'Inteligência Artificial': categoricalColors(6),\n  'Algoritmos e Combinatória': categoricalColors(7),\n  'Arquitetura e Sistemas Operacionais': categoricalColors(8),\n  'Informática e Sociedade': categoricalColors(9),\n};\n\nexport default colors;\n","import React, { useRef, useEffect, memo } from 'react';\nimport * as d3 from 'd3';\n\nimport colaborationNetwork from '../../data/collaboration-network.json';\nimport colors from '../../data/colors';\n\nconst GraphView = ({ setNode }) => {\n  const svgref = useRef(null);\n\n  const bodyStrength = -400;\n  const linkStrength = 0.5;\n\n  var networkLinkStatus = {};\n\n  const networkLinks = colaborationNetwork.publications.reduce(\n    (result, publication) => {\n      if (!publication.authors.length > 1) return result;\n\n      const authorsCombination = publication.authors.flatMap((authorA, idx) =>\n        publication.authors.slice(idx + 1).map((authorB) => {\n          let [nodeA, nodeB] =\n            authorA.localeCompare(authorB) < 0\n              ? [authorA, authorB]\n              : [authorB, authorA];\n          return [nodeA, nodeB];\n        })\n      );\n\n      authorsCombination.forEach(([nodeA, nodeB]) => {\n        let linkId = `${nodeA}-${nodeB}`;\n        networkLinkStatus[linkId] = 1;\n\n        const link = result.find((link) => link.id === linkId);\n        if (link) {\n          link.publications.push(publication);\n        } else {\n          result.push({\n            id: linkId,\n            source: nodeA,\n            target: nodeB,\n            publications: [publication],\n          });\n        }\n      });\n      return result;\n    },\n    []\n  );\n\n  const networkNodes = colaborationNetwork.nodes.filter((node) =>\n    networkLinks.some(\n      (link) => link.source === node.id || link.target === node.id\n    )\n  );\n\n  const isConnected = (nodeA, nodeB) => {\n    return (\n      networkLinkStatus[`${nodeA.id}-${nodeB.id}`] ||\n      networkLinkStatus[`${nodeB.id}-${nodeA.id}`] ||\n      nodeA.id === nodeB.id\n    );\n  };\n\n  const drag = (simulation) => {\n    const dragstarted = (event, dNode) => {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      dNode.fx = dNode.x;\n      dNode.fy = dNode.y;\n    };\n\n    const dragged = (event, dNode) => {\n      dNode.fx = event.x;\n      dNode.fy = event.y;\n    };\n\n    const dragended = (event, dNode) => {\n      if (!event.active) simulation.alphaTarget(0);\n      dNode.fx = null;\n      dNode.fy = null;\n    };\n\n    return d3\n      .drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n  };\n\n  useEffect(() => {\n    const svg = d3.select(svgref.current);\n\n    var width = svgref.current.clientWidth;\n    var height = svgref.current.clientHeight;\n\n    const simulation = d3\n      .forceSimulation(networkNodes)\n      .force(\n        'link',\n        d3\n          .forceLink(networkLinks)\n          .id((d) => d.id)\n          .strength(linkStrength)\n      )\n      .force('charge', d3.forceManyBody().strength(bodyStrength))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('x', d3.forceX())\n      .force('y', d3.forceY());\n\n    networkLinks.forEach((link) => {\n      if (link.source.id === link.target.id) return;\n\n      if (!link.source.degree) link.source.degree = 0;\n      if (!link.target.degree) link.target.degree = 0;\n\n      link.source.degree++;\n      link.target.degree++;\n    });\n\n    const link = svg\n      .append('g')\n      .attr('stroke', '#999')\n      .attr('stroke-opacity', 0.6)\n      .selectAll('line')\n      .data(networkLinks)\n      .join('line')\n      .attr('stroke-width', 1.5);\n\n    const node = svg\n      .append('g')\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 1.5)\n      .selectAll('circle')\n      .data(networkNodes)\n      .join('circle')\n      .attr('r', (d) => (d.degree ? 8 + Math.sqrt(d.degree) : 8))\n      .attr('fill', (d) => colors[d.field])\n      .call(drag(simulation));\n\n    node.on('mouseover', (_event, dNode) => {\n      const transition = d3.transition().duration(200);\n\n      node\n        .transition(transition)\n        .style('stroke-opacity', (o) => (isConnected(dNode, o) ? 1 : 0.3))\n        .style('opacity', (o) => (isConnected(dNode, o) ? 1 : 0.3));\n\n      link\n        .transition(transition)\n        .style('opacity', (l) =>\n          dNode === l.source || dNode === l.target ? 1 : 0.2\n        );\n\n      setNode(dNode);\n    });\n\n    node.on('mouseout', (_dNode) => {\n      const transition = d3.transition().duration(200);\n\n      node\n        .transition(transition)\n        .style('stroke-opacity', 1)\n        .style('opacity', 1);\n\n      link.transition(transition).style('opacity', 1);\n\n      setNode({});\n    });\n\n    // legendTitle\n    svg\n      .append('text')\n      .text('Área de atuação')\n      .attr('font-size', '0.9rem')\n      .style('fill', 'rgb(45, 45, 45)')\n      .style('user-select', 'none')\n      .style('pointer-events', 'none')\n      .attr('transform', 'translate(15, 30)');\n\n    const colorLegend = svg\n      .selectAll('.colorLegend')\n      .data(Object.keys(colors))\n      .enter()\n      .append('g')\n      .attr('transform', (d, i) => 'translate(15,' + (40 + 25 * i) + ')');\n\n    colorLegend\n      .append('rect')\n      .attr('fill', (d) => colors[d])\n      .attr('width', 20)\n      .attr('height', 20);\n\n    colorLegend\n      .append('text')\n      .attr('x', 25)\n      .attr('y', 15)\n      .attr('font-size', '0.85rem')\n      .style('fill', 'rgb(45, 45, 45)')\n      .style('user-select', 'none')\n      .style('pointer-events', 'none')\n      .text((d) => d);\n\n    simulation.on('tick', () => {\n      const margin = 80;\n\n      node\n        .attr(\n          'cx',\n          (d) => (d.x = Math.max(margin, Math.min(width - margin, d.x)))\n        )\n        .attr(\n          'cy',\n          (d) => (d.y = Math.max(margin, Math.min(height - margin, d.y)))\n        );\n\n      link\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n    });\n\n    const handleResize = () => {\n      width = svgref.current.clientWidth;\n      height = svgref.current.clientHeight;\n      simulation.force('center', d3.forceCenter(width / 2, height / 2));\n      simulation.alpha(0.3).restart();\n    };\n\n    window.addEventListener('resize', handleResize);\n  });\n\n  return (\n    <div className=\"graph-container\" style={{ width: '100%', height: '100%' }}>\n      <svg ref={svgref} style={{ width: '100%', height: '100%' }}></svg>\n    </div>\n  );\n};\n\nexport default memo(GraphView);\n","import React from 'react';\n\nimport './styles.css';\n\nconst NodeInformation = ({ node }) => {\n  return (\n    <div className=\"information-container\">\n      <div style={{ width: '40%' }}>\n        <p className=\"node-property-name\">Nome</p>\n        <p className=\"node-property-value\">{node.id || '-'}</p>\n      </div>\n      <div style={{ width: '40%' }}>\n        <p className=\"node-property-name\">Área de atuação</p>\n        <p className=\"node-property-value\">{node.field || '-'}</p>\n      </div>\n      <div>\n        <p className=\"node-property-name\">Grau de colaboração</p>\n        <p className=\"node-property-value\">{node.degree || '-'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NodeInformation;\n","import React, { useState } from 'react';\n\nimport { BsInfoCircle } from 'react-icons/bs';\nimport { IoLogoGithub } from 'react-icons/io';\n\nimport './styles.css';\n\nconst AboutProject = () => {\n  const [openned, setOpenned] = useState(false);\n\n  return (\n    <div className=\"about-container\">\n      <div className=\"about-button\" onClick={() => setOpenned(!openned)}>\n        <BsInfoCircle size={18} />\n        sobre\n      </div>\n      <div className={openned ? 'about-content openned' : 'about-content'}>\n        <p className=\"about-title\">Rede de Colaboração Acadêmica do PESC</p>\n        <p>\n          Lista parcial de docentes que atuaram no PESC nos últimos 50 anos.\n        </p>\n        <p>Dados coletados diretamente do CV Lattes de cada docente.</p>\n        <p>\n          Arestas representam colaboração acadêmica entre docentes (artigo\n          científico, capítulo de livro, e orientação de mestrado ou doutorado).\n        </p>\n        <p>Programação visual: Rafael Damasceno.</p>\n        <p>\n          Coleta e processamento dos dados: Pedro Cavaliere e Rodrigo Palmeira.\n        </p>\n        <p>Coordenação: Daniel Ratton Figueiredo.</p>\n        <a\n          className=\"github-button\"\n          href=\"https://github.com/DamascenoRafael/pesc-collaboration-network\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <IoLogoGithub size={18} />\n          Ver no GitHub\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutProject;\n","import React, { useState } from 'react';\n\nimport GraphView from './components/GraphView';\nimport NodeInformation from './components/NodeInformation';\nimport AboutProject from './components/AboutProject';\n\nconst App = () => {\n  const [node, setNode] = useState({});\n\n  return (\n    <>\n      <GraphView setNode={setNode} />\n      <NodeInformation node={node} />\n      <AboutProject />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}